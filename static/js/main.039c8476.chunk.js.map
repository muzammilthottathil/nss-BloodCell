{"version":3,"sources":["Assets/img/blood_hand_pulse.svg","Assets/img/doctor.svg","Assets/img/doctor_nurse.svg","Assets/img/hospital.svg","Assets/img/hospital_light.svg","Assets/img/logout.svg","Assets/img/nssLogo.svg","Assets/img/two_nurse.svg","Assets/img/index.js","components/LogoSection/LogoSection.js","components/Footer/Footer.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","bloodHandPulse","require","nssLogo","LogoSection","className","src","alt","Footer","Home","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2IAAAA,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,8HCA9BC,EAAiBC,EAAQ,GAMzBC,GALSD,EAAQ,GACHA,EAAQ,IACXA,EAAQ,IACHA,EAAQ,IACfA,EAAQ,IACPA,EAAQ,KACPA,EAAQ,I,MCHjB,SAASE,IACpB,OACI,yBAAKC,UAAU,gBACX,yBAAKC,IAAKH,EAASI,IAAI,KACvB,yBAAKF,UAAU,aACX,uDACA,mE,YCPD,SAASG,IACtB,OACE,yBAAKH,UAAU,kBACb,6CACA,iECDS,SAASI,IACpB,OACI,yBAAKJ,UAAU,aACX,kBAACD,EAAD,MAEA,yBAAKC,UAAU,qBACX,yBAAKC,IAAKL,EAAgBM,IAAI,KAC9B,0CACA,yBAAKF,UAAU,SAAf,kGAIA,yBAAKA,UAAU,gBACX,uBAAGK,KAAK,KAAR,WAIR,kBAACF,EAAD,OCXGG,MATf,WACE,OACE,oCAEE,kBAACF,EAAD,QCKcG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.039c8476.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blood_hand_pulse.9edad4b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctor.d39894b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctor_nurse.dccc2036.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital.d3f10a03.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital_light.4505de16.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.7d7f2a3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/nssLogo.2bf00f3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/two_nurse.6a3358e1.svg\";","export const bloodHandPulse = require(\"./blood_hand_pulse.svg\");\nexport const doctor = require(\"./doctor.svg\");\nexport const doctorNurse = require(\"./doctor_nurse.svg\");\nexport const hospital = require(\"./hospital.svg\");\nexport const hospitalLight = require(\"./hospital_light.svg\");\nexport const logout = require(\"./logout.svg\");\nexport const nssLogo = require(\"./nssLogo.svg\");\nexport const twoNurse = require(\"./two_nurse.svg\");\n","import React from 'react';\nimport { nssLogo } from '../../Assets/img';\nimport './LogoSectionStyle/LogoSectionStyle.css';\n\nexport default function LogoSection() {\n    return (\n        <div className=\"logo-section\">\n            <img src={nssLogo} alt=\"\" />\n            <div className=\"logo-name\">\n                <h1>National Service Scheme</h1>\n                <h3>College of Engineering Trivandram</h3>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport './FooterStyle/FooterStyle.css';\n\nexport default function Footer() {\n  return (\n    <div className='footer-section'>\n      <p>NSS Blood Cell</p>\n      <p>College of Engineering Trivandram</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport LogoSection from '../LogoSection/LogoSection';\nimport { bloodHandPulse } from '../../Assets/img';\nimport './HomeStyle/HomeStyle.css';\nimport Footer from '../Footer/Footer';\n\nexport default function Home() {\n    return (\n        <div className=\"home-page\">\n            <LogoSection />\n\n            <div className=\"home-page-content\">\n                <img src={bloodHandPulse} alt=\"\" />\n                <h1>Blood Cell</h1>\n                <div className=\"quote\">\n                    “ A single pint can save three lives, a single gesture can\n                    create a million smiles ”\n                </div>\n                <div className=\"button-login\">\n                    <a href=\"#\">Login</a>\n                </div>\n            </div>\n\n            <Footer />\n        </div>\n    );\n}\n","import React from \"react\";\nimport Home from \"./components/Home/Home\";\n\nfunction App() {\n  return (\n    <>\n      {/* <h1>This is app js</h1> */}\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}